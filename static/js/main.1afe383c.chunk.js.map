{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","initialState","isStarted","isReversed","sortType","NONE","App","useState","setState","goodList","goods","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","Error","reverse","getReorderedGoods","formattedGoodList","map","good","name","id","v4","buttonListToRender","value","handler","prevState","onClick","className","type","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,mEAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCL,IAAME,EAAe,CACnBC,WAAW,EACXC,YAAY,EACZC,SAAUL,EAASM,MAGRC,EAAgB,WAC3B,MACIC,mBAAgBN,GADpB,0BAASC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,SAAYI,EAA5C,KA0BMC,EAnER,SACEC,EACAN,EACAD,GAGA,IAAMQ,EAAY,YAAOD,GAGzB,OAAQN,GACN,KAAKL,EAASa,QACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKhB,EAASkB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UACzC,MACF,KAAKnB,EAASM,KAGZ,MAEF,QACE,MAAM,IAAIc,MAAJ,eAAkBf,EAAlB,eAGV,OAAOD,EAAaQ,EAAaS,UAAYT,EA0C5BU,CAAkBrB,EAAiBI,EAAUD,GAExDmB,EAAoBb,EAASc,KAAI,SAACC,GAAD,MAAW,CAChDC,KAAMD,EACNE,GAAIC,kBAUAC,EAPU,CACd,CAAEC,MAAO,sBAAuBC,QApBX,kBACrBtB,GAAS,SAACuB,GAAD,mBAAC,eACLA,GADI,IAEP3B,SAAUL,EAASa,eAkBrB,CAAEiB,MAAO,iBAAkBC,QAfR,kBACnBtB,GAAS,SAACuB,GAAD,mBAAC,eACLA,GADI,IAEP3B,SAAUL,EAASkB,cAarB,CAAEY,MAAO,UAAWC,QA5BN,kBACdtB,GAAS,SAACuB,GAAD,mBAAC,eACLA,GADI,IAEP5B,YAAaA,SA0Bf,CAAE0B,MAAO,QAASC,QA/BN,kBAAMtB,EAAS,2BAAKP,GAAN,IAAoBC,WAAW,QAkCxBqB,KAAI,gBAAGM,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACrC,wBACEE,QAASF,EACTG,UAAU,+SACVC,KAAK,SAHP,SAKGL,OAIL,OACE,qBAAKI,UAAU,sCAAf,SACG/B,EACC,sBAAK+B,UAAU,qCAAf,UACGL,EACD,oBAAIK,UAAU,mBAAd,SACGX,EAAkBC,KAAI,gBAAGE,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACrB,oBAEEO,UAAU,iDAFZ,SAIGR,GAHIC,WASb,wBACEM,QAjEM,kBACZxB,GAAS,SAACuB,GAAD,mBAAC,eAAoBA,GAArB,IAAgC7B,WAAW,QAiE9C+B,UAAU,6VACVC,KAAK,SAHP,SAKE,sBAAMD,UAAU,8HAAhB,wBCxIVE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1afe383c.chunk.js","sourcesContent":["/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.NONE:\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      visibleGoods;\n      break;\n\n    default:\n      throw new Error(`Case ${sortType} not found`);\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\ninterface State {\n  isStarted: boolean;\n  isReversed: boolean;\n  sortType: SortType;\n}\n\nconst initialState = {\n  isStarted: false,\n  isReversed: false,\n  sortType: SortType.NONE,\n};\n\nexport const App: React.FC = () => {\n  const [{ isStarted, isReversed, sortType }, setState]\n    = useState<State>(initialState);\n\n  const start = () =>\n    setState((prevState) => ({ ...prevState, isStarted: true }));\n\n  const reset = () => setState({ ...initialState, isStarted: true });\n\n  const reverse = () =>\n    setState((prevState) => ({\n      ...prevState,\n      isReversed: !isReversed,\n    }));\n\n  const sortByAlphabet = () =>\n    setState((prevState) => ({\n      ...prevState,\n      sortType: SortType.ALPABET,\n    }));\n\n  const sortByLength = () =>\n    setState((prevState) => ({\n      ...prevState,\n      sortType: SortType.LENGTH,\n    }));\n\n  const goodList = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  const formattedGoodList = goodList.map((good) => ({\n    name: good,\n    id: v4(),\n  }));\n\n  const buttons = [\n    { value: 'Sort alphabetically', handler: sortByAlphabet },\n    { value: 'Sort by length', handler: sortByLength },\n    { value: 'Reverse', handler: reverse },\n    { value: 'Reset', handler: reset },\n  ];\n\n  const buttonListToRender = buttons.map(({ value, handler }) => (\n    <button\n      onClick={handler}\n      className=\"text-white bg-gradient-to-r from-teal-400 via-teal-500 to-teal-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-teal-300 dark:focus:ring-teal-800 shadow-lg shadow-teal-500/50 dark:shadow-lg dark:shadow-teal-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n      type=\"button\"\n    >\n      {value}\n    </button>\n  ));\n\n  return (\n    <div className=\"App font-mono bg-stone-800 h-screen\">\n      {isStarted ? (\n        <div className=\"container mx-auto p-35 text-center\">\n          {buttonListToRender}\n          <ul className=\"Goods space-y-35\">\n            {formattedGoodList.map(({ name, id }) => (\n              <li\n                key={id}\n                className=\"Goods__item hover:underline text-white text-xl\"\n              >\n                {name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <button\n          onClick={start}\n          className=\"relative button inline-flex items-center justify-center p-0.5 mb-2 mr-2 overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-pink-500 to-orange-400 group-hover:from-pink-500 group-hover:to-orange-400 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800\"\n          type=\"button\"\n        >\n          <span className=\"px-5 py-2.5 transition-all ease-in duration-75 bg-stone-800 dark:bg-gray-900 rounded-md group-hover:bg-opacity-0 text-white\">\n            Start\n          </span>\n        </button>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}